import{_ as s,c as n,o as a,a as l}from"./app.f2d0f4fd.js";const i=JSON.parse('{"title":"2. \u4E24\u6570\u76F8\u52A0","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u9898\u76EE","slug":"\u9898\u76EE","link":"#\u9898\u76EE","children":[]},{"level":2,"title":"\u793A\u4F8B","slug":"\u793A\u4F8B","link":"#\u793A\u4F8B","children":[]},{"level":2,"title":"\u63D0\u793A","slug":"\u63D0\u793A","link":"#\u63D0\u793A","children":[]},{"level":2,"title":"\u601D\u8DEF","slug":"\u601D\u8DEF","link":"#\u601D\u8DEF","children":[]},{"level":2,"title":"\u4EE3\u7801","slug":"\u4EE3\u7801","link":"#\u4EE3\u7801","children":[]},{"level":2,"title":"\u753B\u89E3","slug":"\u753B\u89E3","link":"#\u753B\u89E3","children":[]}],"relativePath":"\u529B\u6263/2.\u4E24\u6570\u76F8\u52A0.md","lastUpdated":1678164647000}'),p={name:"\u529B\u6263/2.\u4E24\u6570\u76F8\u52A0.md"},o=l(`<h1 id="_2-\u4E24\u6570\u76F8\u52A0" tabindex="-1">2. \u4E24\u6570\u76F8\u52A0 <a class="header-anchor" href="#_2-\u4E24\u6570\u76F8\u52A0" aria-hidden="true">#</a></h1><h2 id="\u9898\u76EE" tabindex="-1">\u9898\u76EE <a class="header-anchor" href="#\u9898\u76EE" aria-hidden="true">#</a></h2><p>\u7ED9\u4F60\u4E24\u4E2A <strong>\u975E\u7A7A</strong> \u7684\u94FE\u8868\uFF0C\u8868\u793A\u4E24\u4E2A\u975E\u8D1F\u7684\u6574\u6570\u3002\u5B83\u4EEC\u6BCF\u4F4D\u6570\u5B57\u90FD\u662F\u6309\u7167 <strong>\u9006\u5E8F</strong> \u7684\u65B9\u5F0F\u5B58\u50A8\u7684\uFF0C\u5E76\u4E14\u6BCF\u4E2A\u8282\u70B9\u53EA\u80FD\u5B58\u50A8 <strong>\u4E00\u4F4D</strong> \u6570\u5B57\u3002</p><p>\u8BF7\u4F60\u5C06\u4E24\u4E2A\u6570\u76F8\u52A0\uFF0C\u5E76\u4EE5\u76F8\u540C\u5F62\u5F0F\u8FD4\u56DE\u4E00\u4E2A\u8868\u793A\u548C\u7684\u94FE\u8868\u3002</p><p>\u4F60\u53EF\u4EE5\u5047\u8BBE\u9664\u4E86\u6570\u5B57 0 \u4E4B\u5916\uFF0C\u8FD9\u4E24\u4E2A\u6570\u90FD\u4E0D\u4F1A\u4EE5 0 \u5F00\u5934\u3002</p><h2 id="\u793A\u4F8B" tabindex="-1">\u793A\u4F8B <a class="header-anchor" href="#\u793A\u4F8B" aria-hidden="true">#</a></h2><p><strong>\u793A\u4F8B 1\uFF1A</strong></p><p><img src="https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2021/01/02/addtwonumber1.jpg" alt="img"></p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">\u8F93\u5165\uFF1Al1 = [2,4,3], l2 = [5,6,4]</span></span>
<span class="line"><span style="color:#A6ACCD;">\u8F93\u51FA\uFF1A[7,0,8]</span></span>
<span class="line"><span style="color:#A6ACCD;">\u89E3\u91CA\uFF1A342 + 465 = 807.</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>\u793A\u4F8B 2\uFF1A</strong></p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">\u8F93\u5165\uFF1Al1 = [0], l2 = [0]</span></span>
<span class="line"><span style="color:#A6ACCD;">\u8F93\u51FA\uFF1A[0]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><p><strong>\u793A\u4F8B 3\uFF1A</strong></p><div class="language-"><button class="copy"></button><span class="lang"></span><pre><code><span class="line"><span style="color:#A6ACCD;">\u8F93\u5165\uFF1Al1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]</span></span>
<span class="line"><span style="color:#A6ACCD;">\u8F93\u51FA\uFF1A[8,9,9,9,0,0,0,1]</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span></code></pre></div><h2 id="\u63D0\u793A" tabindex="-1">\u63D0\u793A <a class="header-anchor" href="#\u63D0\u793A" aria-hidden="true">#</a></h2><p><strong>\u63D0\u793A\uFF1A</strong></p><ul><li>\u6BCF\u4E2A\u94FE\u8868\u4E2D\u7684\u8282\u70B9\u6570\u5728\u8303\u56F4 <code>[1, 100]</code> \u5185</li><li><code>0 &lt;= Node.val &lt;= 9</code></li><li>\u9898\u76EE\u6570\u636E\u4FDD\u8BC1\u5217\u8868\u8868\u793A\u7684\u6570\u5B57\u4E0D\u542B\u524D\u5BFC\u96F6</li></ul><h2 id="\u601D\u8DEF" tabindex="-1">\u601D\u8DEF <a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a></h2><ul><li><p>\u6807\u7B7E\uFF1A\u94FE\u8868</p></li><li><p>\u5C06\u4E24\u4E2A\u94FE\u8868\u770B\u6210\u662F\u76F8\u540C\u957F\u5EA6\u7684\u8FDB\u884C\u904D\u5386\uFF0C\u5982\u679C\u4E00\u4E2A\u94FE\u8868\u8F83\u77ED\u5219\u5728\u524D\u9762\u8865 000\uFF0C\u6BD4\u5982 987 + 23 = 987 + 023 = 1010</p></li><li><p>\u6BCF\u4E00\u4F4D\u8BA1\u7B97\u7684\u540C\u65F6\u9700\u8981\u8003\u8651\u4E0A\u4E00\u4F4D\u7684\u8FDB\u4F4D\u95EE\u9898\uFF0C\u800C\u5F53\u524D\u4F4D\u8BA1\u7B97\u7ED3\u675F\u540E\u540C\u6837\u9700\u8981\u66F4\u65B0\u8FDB\u4F4D\u503C</p></li><li><p>\u5982\u679C\u4E24\u4E2A\u94FE\u8868\u5168\u90E8\u904D\u5386\u5B8C\u6BD5\u540E\uFF0C\u8FDB\u4F4D\u503C\u4E3A 1\uFF0C\u5219\u5728\u65B0\u94FE\u8868\u6700\u524D\u65B9\u6DFB\u52A0\u8282\u70B9 1</p></li><li><p>\u5C0F\u6280\u5DE7\uFF1A\u5BF9\u4E8E\u94FE\u8868\u95EE\u9898\uFF0C\u8FD4\u56DE\u7ED3\u679C\u4E3A\u5934\u7ED3\u70B9\u65F6\uFF0C\u901A\u5E38\u9700\u8981\u5148\u521D\u59CB\u5316\u4E00\u4E2A\u9884\u5148\u6307\u9488 pre\uFF0C\u8BE5\u6307\u9488\u7684\u4E0B\u4E00\u4E2A\u8282\u70B9\u6307\u5411\u771F\u6B63\u7684\u5934\u7ED3\u70B9 head\u3002<strong>\u4F7F\u7528\u9884\u5148\u6307\u9488\u7684\u76EE\u7684\u5728\u4E8E\u94FE\u8868\u521D\u59CB\u5316\u65F6\u65E0\u53EF\u7528\u8282\u70B9\u503C\uFF0C\u800C\u4E14\u94FE\u8868\u6784\u9020\u8FC7\u7A0B\u9700\u8981\u6307\u9488\u79FB\u52A8\uFF0C\u8FDB\u800C\u4F1A\u5BFC\u81F4\u5934\u6307\u9488\u4E22\u5931\uFF0C\u65E0\u6CD5\u8FD4\u56DE\u7ED3\u679C\u3002</strong></p></li></ul><h2 id="\u4EE3\u7801" tabindex="-1">\u4EE3\u7801 <a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a></h2><div class="language-java"><button class="copy"></button><span class="lang">java</span><pre><code><span class="line"><span style="color:#676E95;">/**</span></span>
<span class="line"><span style="color:#676E95;"> * Definition for singly-linked list.</span></span>
<span class="line"><span style="color:#676E95;"> * public class ListNode {</span></span>
<span class="line"><span style="color:#676E95;"> *     int val;</span></span>
<span class="line"><span style="color:#676E95;"> *     ListNode next;</span></span>
<span class="line"><span style="color:#676E95;"> *     ListNode() {}</span></span>
<span class="line"><span style="color:#676E95;"> *     ListNode(int val) { this.val = val; }</span></span>
<span class="line"><span style="color:#676E95;"> *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }</span></span>
<span class="line"><span style="color:#676E95;"> * }</span></span>
<span class="line"><span style="color:#676E95;"> */</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Solution</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ListNode</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">addTwoNumbers</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">ListNode</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">l1</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ListNode</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;">l2</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#C792EA;">ListNode</span><span style="color:#A6ACCD;"> pre </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ListNode</span><span style="color:#89DDFF;">();</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">ListNode</span><span style="color:#A6ACCD;"> cur </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> pre</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> carry </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">while</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">l1 </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;"> l2 </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null){</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> l1 </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">l1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> y </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> l2 </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;">l2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">val</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#C792EA;">int</span><span style="color:#A6ACCD;"> sum </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> x </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> y </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> carry</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            carry </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> sum </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            sum </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> sum </span><span style="color:#89DDFF;">%</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            cur</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">next </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ListNode</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">sum</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">            cur </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> cur</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">if</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">l1 </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null){</span></span>
<span class="line"><span style="color:#A6ACCD;">                l1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> l1</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">if</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">l2 </span><span style="color:#89DDFF;">!=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null){</span></span>
<span class="line"><span style="color:#A6ACCD;">                l2 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> l2</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">if</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;">carry </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">){</span></span>
<span class="line"><span style="color:#A6ACCD;">            cur</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">next </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ListNode</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">return</span><span style="color:#A6ACCD;"> pre</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">next</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span>
<span class="line"></span></code></pre></div><h2 id="\u753B\u89E3" tabindex="-1">\u753B\u89E3 <a class="header-anchor" href="#\u753B\u89E3" aria-hidden="true">#</a></h2><p><img src="https://pic.leetcode-cn.com/2519bd7f7da0f3bd51dd0f06e6363f4f62bfb25472c5ec233cf969e5c1472e33-file_1559748028103" alt="img"></p>`,22),e=[o];function c(t,r,D,y,C,A){return a(),n("div",null,e)}const d=s(p,[["render",c]]);export{i as __pageData,d as default};
